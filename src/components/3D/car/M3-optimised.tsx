/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 --shadows --types m3-optimised.glb 
*/

import * as THREE from "three";
import { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { useKeyboardControls } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useControls as useLeva } from "leva";
import { useGameStore } from "../../../store/store";

type GLTFResult = GLTF & {
  nodes: {
    Object_71: THREE.Mesh;
    Object_72: THREE.Mesh;
    Object_71001: THREE.Mesh;
    Object_72001: THREE.Mesh;
    Object_73001: THREE.Mesh;
    Object_73001_1: THREE.Mesh;
    Object_73001_2: THREE.Mesh;
    Object_73001_3: THREE.Mesh;
    Object_73001_4: THREE.Mesh;
    Object_73001_5: THREE.Mesh;
    Object_73001_6: THREE.Mesh;
    Object_73001_7: THREE.Mesh;
    Object_73001_8: THREE.Mesh;
    Object_73001_9: THREE.Mesh;
    Object_73001_10: THREE.Mesh;
    Object_73001_11: THREE.Mesh;
    Object_73001_12: THREE.Mesh;
    Object_73001_13: THREE.Mesh;
    Object_73001_14: THREE.Mesh;
    Object_73001_15: THREE.Mesh;
    Object_73001_16: THREE.Mesh;
    Object_73001_17: THREE.Mesh;
    Object_73001_18: THREE.Mesh;
    Object_73001_19: THREE.Mesh;
    Object_73001_20: THREE.Mesh;
    Object_73001_21: THREE.Mesh;
  };
  materials: {
    ["Material.011"]: THREE.MeshStandardMaterial;
    ["Material.010"]: THREE.MeshStandardMaterial;
    ["Material.022"]: THREE.MeshStandardMaterial;
    ["Material.023"]: THREE.MeshStandardMaterial;
    ["Material.028"]: THREE.MeshStandardMaterial;
    ["Material.003"]: THREE.MeshStandardMaterial;
    ["Material.008"]: THREE.MeshStandardMaterial;
    ["Material.013"]: THREE.MeshStandardMaterial;
    ["Material.012"]: THREE.MeshStandardMaterial;
    ["Material.007"]: THREE.MeshStandardMaterial;
    ["Material.002"]: THREE.MeshStandardMaterial;
    ["Material.004"]: THREE.MeshStandardMaterial;
    ["Material.005"]: THREE.MeshStandardMaterial;
    ["Material.006"]: THREE.MeshStandardMaterial;
    ["Material.019"]: THREE.MeshStandardMaterial;
    ["Material.020"]: THREE.MeshStandardMaterial;
    ["Material.021"]: THREE.MeshStandardMaterial;
    ["Material.024"]: THREE.MeshStandardMaterial;
    ["Material.026"]: THREE.MeshStandardMaterial;
    ["Material.029"]: THREE.MeshStandardMaterial;
    ["Material.030"]: THREE.MeshStandardMaterial;
    ["Material.031"]: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export function M3(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/cars/m3-optimised.glb") as GLTFResult;
    const [, get] = useKeyboardControls();
    const pause = useGameStore(state => state.pause);
  
    const leftLightRef = useRef(null);
    const rightLightRef = useRef(null);
  
    const backLightColors = useLeva(
      "Back Light Color",
      {
        emissive: { value: new THREE.Color(0x740909), step: 0.01 },
        intensity: { value: 1, min: 0, max: 10, step: 0.01 },
      },
      {
        collapsed: true,
      },
    );
  
    materials["Material.004"].emissive = new THREE.Color(0x740909);
    materials["Material.004"].emissiveIntensity = 2;
    materials["Material.006"].emissive = new THREE.Color(0x740909);
    materials["Material.006"].emissiveIntensity = 0;
    materials["Material.002"].emissiveIntensity = 20;
    materials["Material.002"].emissive = new THREE.Color(0xffc562);
    let intensity = 1;
    useFrame(() => {
      if(pause) return;
      const { brake } = get();
      materials["Material.006"].emissiveIntensity = THREE.MathUtils.lerp(
        materials["Material.006"].emissiveIntensity,
        brake ? 1200 : 10,
        0.1,
      );
  
      intensity = THREE.MathUtils.lerp(
        leftLightRef.current.intensity,
        brake ? 4 : 1,
        0.1,
      );
      leftLightRef.current.intensity = intensity;
      rightLightRef.current.intensity = intensity;
    });
  return (
    <group
      {...props}
      dispose={null}
      rotation={[0, Math.PI / 2, 0]}
      scale={1.3}
      position={[1.1, -0.48, 0]}
    >
            <pointLight
        ref={leftLightRef}
        position={[0.35, 0.48, -2.8]}
        intensity={1}
        color="#740909"
      />
      <pointLight
        ref={rightLightRef}
        position={[-0.35, 0.48, -2.8]}
        intensity={1}
        color="#740909"
      />
      <group position={[-0.006, 0.611, 0.573]} scale={0.055}>
        <mesh
          geometry={nodes.Object_71.geometry}
          material={materials["Material.011"]}
        />
        <mesh
          geometry={nodes.Object_72.geometry}
          material={materials["Material.010"]}
        />
      </group>
      <group position={[0, 0, -0.011]} scale={0.328} />
      <group position={[-0.006, 0.611, 0.573]} scale={0.055}>
        <mesh
          geometry={nodes.Object_71001.geometry}
          material={materials["Material.022"]}
        />
        <mesh
          geometry={nodes.Object_72001.geometry}
          material={materials["Material.023"]}
        />
      </group>
      <group position={[0, 0, -0.011]} scale={0.328} />
      <group
        position={[-0.006, 0.247, -1.723]}
        rotation={[0, 0, Math.PI / 2]}
        scale={0.265}
      >
        <mesh
        castShadow receiveShadow
          geometry={nodes.Object_73001.geometry}
          material={materials["Material.028"]}
        />
        <mesh
          geometry={nodes.Object_73001_1.geometry}
          material={materials["Material.003"]}
        />
        <mesh
          geometry={nodes.Object_73001_2.geometry}
          material={materials["Material.008"]}
        />
        <mesh
          geometry={nodes.Object_73001_3.geometry}
          material={materials["Material.013"]}
        />
        <mesh
          geometry={nodes.Object_73001_4.geometry}
          material={materials["Material.012"]}
        />
        <mesh
          geometry={nodes.Object_73001_5.geometry}
          material={materials["Material.011"]}
        />
        <mesh
          geometry={nodes.Object_73001_6.geometry}
          material={materials["Material.010"]}
        />
        <mesh
        castShadow
        receiveShadow
          geometry={nodes.Object_73001_7.geometry}
          material={materials["Material.007"]}
        />
        <mesh
          geometry={nodes.Object_73001_8.geometry}
          material={materials["Material.002"]}
        />
        <mesh
          geometry={nodes.Object_73001_9.geometry}
          material={materials["Material.004"]}
        />
        <mesh
          geometry={nodes.Object_73001_10.geometry}
          material={materials["Material.005"]}
        />
        <mesh
          geometry={nodes.Object_73001_11.geometry}
          material={materials["Material.006"]}
        />
        <mesh
          geometry={nodes.Object_73001_12.geometry}
          material={materials["Material.019"]}
        />

        <mesh
          geometry={nodes.Object_73001_20.geometry}
          material={materials["Material.030"]}
        />
 
      </group>
    </group>
  );
}

useGLTF.preload("/models/cars/m3-optimised.glb");
