/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 --shadows --types wheel.glb 
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_55: THREE.Mesh
    Object_55_1: THREE.Mesh
    Object_55_2: THREE.Mesh
    Object_55_3: THREE.Mesh
  }
  materials: {
    ['Material.008']: THREE.MeshStandardMaterial
    ['Material.007']: THREE.MeshStandardMaterial
    ['Material.009']: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export const WheelMesh = (props: JSX.IntrinsicElements['group']) => {
  const { nodes, materials } = useGLTF('/models/cars/wheel.glb') as GLTFResult
  materials['Material.009'].emissive.r = materials['Material.009'].color.r;
  materials['Material.009'].emissive.g = materials['Material.009'].color.g;
  materials['Material.009'].emissive.b = materials['Material.009'].color.b;
  materials['Material.009'].emissiveIntensity = 1;
  materials['Material.002'].emissive.r = materials['Material.002'].color.r;
  materials['Material.002'].emissive.g = materials['Material.002'].color.g;
  materials['Material.002'].emissive.b = materials['Material.002'].color.b;
  materials['Material.002'].emissiveIntensity = 1;
  return (
    <group {...props} dispose={null}>
      <group scale={0.328}>
        <mesh  geometry={nodes.Object_55.geometry} material={materials['Material.008']} />
        <mesh  geometry={nodes.Object_55_1.geometry} material={materials['Material.007']} />
        <mesh  geometry={nodes.Object_55_2.geometry} material={materials['Material.009']} />
        <mesh  geometry={nodes.Object_55_3.geometry} material={materials['Material.002']} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/cars/wheel.glb')
