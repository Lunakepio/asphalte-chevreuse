/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 --shadows --types --instance chevreuse-test.glb 
Files: chevreuse-test.glb [1.94MB] > C:\Users\mouli\test-3\public\chevreuse-test-transformed.glb [79.73KB] (96%)
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube_1: THREE.Mesh
    Cube_2: THREE.Mesh
    Cube001: THREE.Mesh
    Plane001: THREE.Mesh
    ['pylon(Clone)']: THREE.Mesh
  }
  materials: {
    PaletteMaterial002: THREE.MeshStandardMaterial
    PaletteMaterial001: THREE.MeshStandardMaterial
    PaletteMaterial003: THREE.MeshStandardMaterial
    PaletteMaterial005: THREE.MeshStandardMaterial
    PaletteMaterial004: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/chevreuse-test-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[0.254, -0.788, 0.064]} rotation={[0, -0.13, 0]} scale={0.01}>
        <mesh castShadow receiveShadow geometry={nodes.Cube_1.geometry} material={materials.PaletteMaterial002} />
        <mesh castShadow receiveShadow geometry={nodes.Cube_2.geometry} material={materials.PaletteMaterial001} />
      </group>
      <mesh castShadow receiveShadow geometry={nodes.Cube001.geometry} material={materials.PaletteMaterial003} position={[9.022, -1.161, -8.889]} rotation={[-1.472, -1.524, -1.427]} scale={0.01} />
      <mesh castShadow receiveShadow geometry={nodes.Plane001.geometry} material={materials.PaletteMaterial005} position={[8.591, -0.459, -5.771]} scale={8.953} />
      <mesh castShadow receiveShadow geometry={nodes['pylon(Clone)'].geometry} material={materials.PaletteMaterial004} position={[0.635, -0.778, 0.03]} rotation={[-0.012, 0.071, 0.049]} scale={0.074} />
    </group>
  )
}

useGLTF.preload('/chevreuse-test-transformed.glb')
